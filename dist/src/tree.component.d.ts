import { EventEmitter, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';
import { TreeService } from './tree.service';
import * as TreeTypes from './tree.types';
import { NodeCheckedEvent, NodeUncheckedEvent, NodeDoubleClickedEvent, NodeRenameKeydownEvent, NodeRenameInputChangeEvent } from './tree.events';
import { Tree } from './tree';
import { TreeController } from './tree-controller';
import { NodeDragStartEvent } from './draggable/draggable.events';
import * as i0 from "@angular/core";
export declare class TreeComponent implements OnInit, OnChanges, OnDestroy {
    private treeService;
    private static EMPTY_TREE;
    treeModel: TreeTypes.TreeModel;
    settings: TreeTypes.Ng2TreeSettings;
    nodeCreated: EventEmitter<any>;
    nodeRemoved: EventEmitter<any>;
    nodeRenamed: EventEmitter<any>;
    nodeDoubleClicked: EventEmitter<NodeDoubleClickedEvent>;
    nodeSelected: EventEmitter<any>;
    nodeUnselected: EventEmitter<any>;
    nodeDragStarted: EventEmitter<NodeDragStartEvent>;
    nodeMoved: EventEmitter<any>;
    nodeExpanded: EventEmitter<any>;
    nodeCollapsed: EventEmitter<any>;
    loadNextLevel: EventEmitter<any>;
    nodeChecked: EventEmitter<NodeCheckedEvent>;
    nodeUnchecked: EventEmitter<NodeUncheckedEvent>;
    nodeRenameKeydown: EventEmitter<NodeRenameKeydownEvent>;
    nodeRenameInputChange: EventEmitter<NodeRenameInputChangeEvent>;
    menuItemSelected: EventEmitter<any>;
    tree: Tree;
    rootComponent: any;
    template: any;
    private subscriptions;
    constructor(treeService: TreeService);
    ngOnChanges(changes: SimpleChanges): void;
    ngOnInit(): void;
    getController(): TreeController;
    getControllerByNodeId(id: number | string): TreeController;
    ngOnDestroy(): void;
    static ɵfac: i0.ɵɵFactoryDef<TreeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDefWithMeta<TreeComponent, "tree", never, { "treeModel": "tree"; "settings": "settings"; }, { "nodeCreated": "nodeCreated"; "nodeRemoved": "nodeRemoved"; "nodeRenamed": "nodeRenamed"; "nodeDoubleClicked": "nodeDoubleClicked"; "nodeSelected": "nodeSelected"; "nodeUnselected": "nodeUnselected"; "nodeDragStarted": "nodeDragStarted"; "nodeMoved": "nodeMoved"; "nodeExpanded": "nodeExpanded"; "nodeCollapsed": "nodeCollapsed"; "loadNextLevel": "loadNextLevel"; "nodeChecked": "nodeChecked"; "nodeUnchecked": "nodeUnchecked"; "nodeRenameKeydown": "nodeRenameKeydown"; "nodeRenameInputChange": "nodeRenameInputChange"; "menuItemSelected": "menuItemSelected"; }, ["template"], never>;
}
